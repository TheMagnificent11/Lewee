// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Restaurant.Infrastructure.Data;

#nullable disable

namespace Sample.Restaurant.Infrastructure.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20230111203041_Orders")]
    partial class Orders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("res")
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lewee.Domain.DomainEventReference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Dispatched")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomainEventAssemblyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DomainEventClassName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DomainEventJson")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PersistedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Dispatched", "PersistedAt");

                    b.ToTable("DomainEventReferences", "res");
                });

            modelBuilder.Entity("Lewee.Domain.EnumEntity<Sample.Restaurant.Contracts.OrderStatus>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses", "res");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Ordering"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Order Placed"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Updated"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Paid"
                        });
                });

            modelBuilder.Entity("Sample.Restaurant.Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("TableId");

                    b.ToTable("Orders", "res");
                });

            modelBuilder.Entity("Sample.Restaurant.Domain.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInUse")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("TableNumber")
                        .IsUnique();

                    b.ToTable("Tables", "res");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dab4cd90-e6ca-48ec-b7a0-fcbe4e6e5805"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5308),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5311),
                            ModifiedBy = "System",
                            TableNumber = 1
                        },
                        new
                        {
                            Id = new Guid("7c181a4b-43a9-4d3c-acdc-dc00a1f8a423"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5331),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5331),
                            ModifiedBy = "System",
                            TableNumber = 2
                        },
                        new
                        {
                            Id = new Guid("ec0fad21-c060-4315-a39f-6947deccd8fa"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5334),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5335),
                            ModifiedBy = "System",
                            TableNumber = 3
                        },
                        new
                        {
                            Id = new Guid("735e6fee-be38-4b02-a1e9-659e727c072e"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5337),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5337),
                            ModifiedBy = "System",
                            TableNumber = 4
                        },
                        new
                        {
                            Id = new Guid("45694a13-30c1-4ff9-b7d2-8079657a6e29"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5339),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5339),
                            ModifiedBy = "System",
                            TableNumber = 5
                        },
                        new
                        {
                            Id = new Guid("87cbce7d-0daa-4ed5-9473-a1a473ca0cb5"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5344),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5344),
                            ModifiedBy = "System",
                            TableNumber = 6
                        },
                        new
                        {
                            Id = new Guid("2a150b61-8f9a-497f-a77a-2c701158b5a5"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5346),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5346),
                            ModifiedBy = "System",
                            TableNumber = 7
                        },
                        new
                        {
                            Id = new Guid("830f9c25-7cbd-44b7-84b1-bd55973deca9"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5420),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5420),
                            ModifiedBy = "System",
                            TableNumber = 8
                        },
                        new
                        {
                            Id = new Guid("3cd0f023-94e8-4114-b139-21d4955e1bab"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5422),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5422),
                            ModifiedBy = "System",
                            TableNumber = 9
                        },
                        new
                        {
                            Id = new Guid("a6ce6962-20ec-4def-be6d-d568a12a022c"),
                            CreatedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5426),
                            CreatedBy = "System",
                            IsDeleted = false,
                            IsInUse = false,
                            ModifiedAtUtc = new DateTime(2023, 1, 11, 20, 30, 41, 44, DateTimeKind.Utc).AddTicks(5426),
                            ModifiedBy = "System",
                            TableNumber = 10
                        });
                });

            modelBuilder.Entity("Sample.Restaurant.Domain.Order", b =>
                {
                    b.HasOne("Lewee.Domain.EnumEntity<Sample.Restaurant.Contracts.OrderStatus>", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sample.Restaurant.Domain.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderStatus");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Sample.Restaurant.Domain.Table", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
